# rpcgen
# Autogenerated from man page /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/share/man/man1/rpcgen.1
complete -c rpcgen -s a -d 'Generate all the files including sample code for client and server side'
complete -c rpcgen -s b -d 'This generates code for the "SunOS 4. 1" style of RPC.  This is the default'
complete -c rpcgen -s C -d 'Generate code in ANSI C'
complete -c rpcgen -s c -d 'Compile into XDR routines'
complete -c rpcgen -s D -d 'Define a symbol name.  Equivalent to the #define directive in the source'
complete -c rpcgen -s h -d 'Compile into C data-definitions (a header file)'
complete -c rpcgen -s K -d 'By default, services created using rpcgen wait 120 seconds after servicing a …'
complete -c rpcgen -s L -d 'Server errors will be sent to syslog instead of stderr'
complete -c rpcgen -s l -d 'Compile into client-side stubs'
complete -c rpcgen -s m -d 'Compile into server-side stubs, but do not generate a main routine'
complete -c rpcgen -s N -d 'Use the newstyle of rpcgen'
complete -c rpcgen -s n -d 'Compile into server-side stubs for the transport specified by netid'
complete -c rpcgen -s o -d 'Specify the name of the output file'
complete -c rpcgen -o 'S\\&c' -d 'Generate sample code to show the use of remote procedure and how to bind to t…'
complete -c rpcgen -o 'S\\&s' -d 'Generate skeleton code for the remote procedures on the server side'
complete -c rpcgen -s s -d 'Compile into server-side stubs for all the transports belonging to the class …'
complete -c rpcgen -s T -d 'Generate the code to support RPC dispatch tables'
complete -c rpcgen -s t -d 'Compile into RPC dispatch table'

