# llvm-otool
# Autogenerated from man page /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/share/man/man1/llvm-otool.1
complete -c llvm-otool -o objdump -d 'This is a synonym for  -object-tool-path " objdump", described below'
complete -c llvm-otool -o object-tool-path -d 'After parsing the otool arguments, execute the command indicated by  tool'
complete -c llvm-otool -l private-header
complete -c llvm-otool -o show-objdump-command -d 'Print the command that llvm-otool (1) will execute'
complete -c llvm-otool -s m -d 'option is always used'
complete -c llvm-otool -s j -d 'needs to be used'
complete -c llvm-otool -l macho -d 'option must be used'
complete -c llvm-otool -s f -d 'The objdump (1) option to display the universal headers is'
complete -c llvm-otool -l universal-headers
complete -c llvm-otool -s a -d 'The objdump (1)'
complete -c llvm-otool -l archive-headers -d 'will print the archive header, if the file is an archive'
complete -c llvm-otool -o aV -d 'options, the objdump (1)'
complete -c llvm-otool -l archive-member-offsets -d 'can be added'
complete -c llvm-otool -s h -d 'The objdump (1) option to display the Mach header is'
complete -c llvm-otool -s l -d 'The objdump (1) option to display the load commands is'
complete -c llvm-otool -l private-headers -d 'This implies the'
complete -c llvm-otool -s L -d 'The objdump (1) option to display the names and version numbers of the shared…'
complete -c llvm-otool -l dylibs-used
complete -c llvm-otool -s D -d 'The objdump (1) option to display just the install name of a shared library is'
complete -c llvm-otool -l dylib-id
complete -c llvm-otool -s t -d 'The objdump (1) option to display the contents of the (__TEXT,__text) section…'
complete -c llvm-otool -l section -d 'option.   If disassembly is wanted as with the'
complete -c llvm-otool -o tv -d 'otool (1) options then the objdump (1)'
complete -c llvm-otool -l disassemble -d 'is used'
complete -c llvm-otool -o tV -d 'options will do.   If this is not wanted then the objdump (1)'
complete -c llvm-otool -l no-symbolic-operands -d 'option can be used'
complete -c llvm-otool -s x -d 'The objdump (1) option to display the contents of every __text section define…'
complete -c llvm-otool -o xv -d 'otool (1) options then objdump (1)'
complete -c llvm-otool -l disassemble-all -d 'is used'
complete -c llvm-otool -o xV -d 'options will do.   If this is not wanted then the objdump (1)'
complete -c llvm-otool -s p -d 'The objdump (1) option to start the disassembly from symbol name is'
complete -c llvm-otool -l dis-symname
complete -c llvm-otool -s s -d 'The objdump (1) option to display the contents of the section ( segname,sectn…'
complete -c llvm-otool -s d -d 'The objdump (1) option to display the contents of the (__DATA,__data) section…'
complete -c llvm-otool -s o -d 'The objdump (1) option to display the contents of the __OBJC segment used by …'
complete -c llvm-otool -l objc-meta-data
complete -c llvm-otool -s r -d 'The objdump (1) option to display the relocation entries is'
complete -c llvm-otool -l reloc -d 'Note that the default relocation entry format is different between objdump (1…'
complete -c llvm-otool -s S -d 'There is no objdump (1) option to display  the contents of the `__'
complete -c llvm-otool -l print-armap -d option
complete -c llvm-otool -s I -d 'The objdump (1) option to display the indirect symbol table is'
complete -c llvm-otool -l indirect-symbols
complete -c llvm-otool -s G -d 'The objdump (1) option to display the data in code table is'
complete -c llvm-otool -l data-in-code
complete -c llvm-otool -s v -d 'For objdump (1) verbose output is the default and to get non-verbose output t…'
complete -c llvm-otool -l non-verbose -d 'is used'
complete -c llvm-otool -s V -d 'For objdump (1) displaying the disassembled operands symbolically is the defa…'
complete -c llvm-otool -s X -d 'The objdump (1) option to not print leading addresses or headers with disasse…'
complete -c llvm-otool -l no-leading-addr
complete -c llvm-otool -o mcpu -d 'The objdump (1) option when doing disassembly using the llvm disassembler to …'
complete -c llvm-otool -l mcpu -d option
complete -c llvm-otool -l no-show-raw-insn
complete -c llvm-otool -s P -d 'The objdump (1) option to print the info plist section, (__TEXT,__info_plist)…'
complete -c llvm-otool -l info-plist
complete -c llvm-otool -s C -d 'The objdump (1) option to display the linker optimization hints is'
complete -c llvm-otool -l link-opt-hints
complete -c llvm-otool -o arch -d 'The objdump (1) options to specifies the architectures to operate on are the'
complete -c llvm-otool -l arch -d options
complete -c llvm-otool -l version -d 'The objdump (1) option to display the llvm-otool (1) version information and …'
complete -c llvm-otool -s T -d 'There is no objdump (1) option to display the table of contents for a dynamic…'
complete -c llvm-otool -s M -d 'There is no objdump (1) option to display the module table of a dynamically l…'
complete -c llvm-otool -s R -d 'There is no objdump (1) option to display the reference table of a dynamicall…'
complete -c llvm-otool -s H -d 'There is no objdump (1) option to display the two-level namespace hints table…'
complete -c llvm-otool -s c -d 'There is no objdump (1) option to display the argument strings (argv[] and en…'
complete -c llvm-otool -s B -d 'There is no objdump (1) option to force Thumb disassembly on ARM objects'
complete -c llvm-otool -s q -d 'There is no objdump (1) option to use the llvm disassembler when doing disass…'
complete -c llvm-otool -s Q -d 'There is no objdump (1) option to use the otool (1) disassembler when doing d…'
complete -c llvm-otool -s i -d 'There is no objdump (1) option to display the shared library initialization t…'
complete -c llvm-otool -o function_offsets -d 'There is no objdump (1) option when doing disassembly to print the decimal of…'

