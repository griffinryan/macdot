# lex
# Autogenerated from man page /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/share/man/man1/lex.1
complete -c lex -o Ca -l align -d 'trade off larger tables for better memory alignment'
complete -c lex -o Ce -l ecs -d 'construct equivalence classes'
complete -c lex -o Cf -d 'do not compress tables; use -f representation'
complete -c lex -o CF -d 'do not compress tables; use -F representation'
complete -c lex -o Cm -l meta-ecs -d 'construct meta-equivalence classes'
complete -c lex -o Cr -l read -d 'use read() instead of stdio for scanner input'
complete -c lex -s f -l full -d 'generate fast, large scanner.  Same as -Cfr'
complete -c lex -s F -l fast -d 'use alternate table representation.  Same as -CFr'
complete -c lex -o Cem -d 'default compression (same as --ecs --meta-ecs) . SS "Debugging:"'
complete -c lex -s d -l debug -d 'enable debug mode in scanner'
complete -c lex -s b -l backup -d 'write backing-up information to lex. backup'
complete -c lex -s p -l perf-report -d 'write performance report to stderr'
complete -c lex -s s -l nodefault -d 'suppress default rule to ECHO unmatched text'
complete -c lex -s T -l trace -d 'flex should run in trace mode'
complete -c lex -s w -l nowarn -d 'do not generate warnings'
complete -c lex -s v -l verbose -d 'write summary of scanner statistics to stdout'
complete -c lex -l hex -d 'use hexadecimal numbers instead of octal in debug outputs FILES'
complete -c lex -s o -l outfile -d 'specify output filename'
complete -c lex -s S -l skel -d 'specify skeleton file'
complete -c lex -s t -l stdout -d 'write scanner on stdout instead of lex. yy. c'
complete -c lex -l yyclass -d 'name of C++ class'
complete -c lex -l header-file -d 'create a C header file in addition to the scanner'
complete -c lex -l tables-file -d 'Scanner behavior:'
complete -c lex -s 7 -l 7bit -d 'generate 7-bit scanner'
complete -c lex -s 8 -l 8bit -d 'generate 8-bit scanner'
complete -c lex -s B -l batch -d 'generate batch scanner (opposite of -I)'
complete -c lex -s i -l case-insensitive -d 'ignore case in patterns'
complete -c lex -s l -l lex-compat -d 'maximal compatibility with original lex'
complete -c lex -s X -l posix-compat -d 'maximal compatibility with POSIX lex'
complete -c lex -s I -l interactive -d 'generate interactive scanner (opposite of -B)'
complete -c lex -l yylineno -d 'track line count in yylineno Generated code:'
complete -c lex -s + -l c++ -d 'generate C++ scanner class'
complete -c lex -o Dmacro -d '#define macro defn  (default defn is \'1\')'
complete -c lex -s L -l noline -d 'suppress #line directives in scanner'
complete -c lex -s P -l prefix -d 'use STRING as prefix instead of "yy"'
complete -c lex -s R -l reentrant -d 'generate a reentrant C scanner'
complete -c lex -l bison-bridge -d 'scanner for bison pure parser'
complete -c lex -l bison-locations -d 'include yylloc support'
complete -c lex -l stdinit -d 'initialize yyin/yyout to stdin/stdout'
complete -c lex -l nounistd -d 'do not include <unistd. h>'
complete -c lex -l noFUNCTION -d 'do not generate a particular FUNCTION Miscellaneous:'
complete -c lex -s c -d 'do-nothing POSIX option'
complete -c lex -s n -d 'do-nothing POSIX option'
complete -c lex -s '?'
complete -c lex -s h -l help -d 'produce this help message'
complete -c lex -s V -l version -d 'report flex version SEE ALSO The full documentation for flex is maintained asâ€¦'

