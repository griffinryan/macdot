# gperf
# Autogenerated from man page /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/share/man/man1/gperf.1
complete -c gperf -s e -l delimiters -d 'Allow user to provide a string containing delimiters used to separate keyword…'
complete -c gperf -s t -l struct-type -d 'Allows the user to include a structured type declaration for generated code'
complete -c gperf -l ignore-case -d 'Consider upper and lower case ASCII characters as equivalent'
complete -c gperf -s L -l language -d 'Generates code in the specified language'
complete -c gperf -s K -l slot-name -d 'Select name of the keyword component in the keyword structure'
complete -c gperf -s F -l initializer-suffix -d 'Initializers for additional components in the keyword structure'
complete -c gperf -s H -l hash-function-name -d 'Specify name of generated hash function.  Default is \'hash\''
complete -c gperf -s N -l lookup-function-name -d 'Specify name of generated lookup function.  Default name is \'in_word_set\''
complete -c gperf -s Z -l class-name -d 'Specify name of generated C++ class.  Default name is \'Perfect_Hash\''
complete -c gperf -s 7 -l seven-bit -d 'Assume 7-bit characters'
complete -c gperf -s l -l compare-lengths -d 'Compare key lengths before trying a string comparison'
complete -c gperf -s c -l compare-strncmp -d 'Generate comparison code using strncmp rather than strcmp'
complete -c gperf -s C -l readonly-tables -d 'Make the contents of generated lookup tables constant, i. e. , readonly'
complete -c gperf -s E -l enum -d 'Define constant values using an enum local to the lookup function rather than…'
complete -c gperf -s I -l includes -d 'Include the necessary system include file <string'
complete -c gperf -s G -l global-table -d 'Generate the static table of keywords as a static global variable, rather tha…'
complete -c gperf -s P -l pic -d 'Optimize the generated table for inclusion in shared libraries'
complete -c gperf -s Q -l string-pool-name -d 'Specify name of string pool generated by option --pic'
complete -c gperf -l null-strings -d 'Use NULL strings instead of empty strings for empty keyword table entries'
complete -c gperf -s W -l word-array-name -d 'Specify name of word list array.  Default name is \'wordlist\''
complete -c gperf -l length-table-name -d 'Specify name of length table array.  Default name is \'lengthtable\''
complete -c gperf -s S -l switch -d 'Causes the generated C code to use a switch statement scheme, rather than an …'
complete -c gperf -s T -l omit-struct-type -d 'Prevents the transfer of the type declaration to the output file'
complete -c gperf -l size-type -d 'Specify the type for length parameters.  Default type is \'unsigned int\''
complete -c gperf -s k -l key-positions -d 'Select the key positions used in the hash function'
complete -c gperf -s D -l duplicates -d 'Handle keywords that hash to duplicate values'
complete -c gperf -s m -l multiple-iterations -d 'Perform multiple choices of the -i and -j values, and choose the best results'
complete -c gperf -s i -l initial-asso -d 'Provide an initial value for the associate values array.  Default is 0'
complete -c gperf -s j -l jump -d 'Affects the "jump value", i. e'
complete -c gperf -s n -l no-strlen -d 'Do not include the length of the keyword when computing the hash function'
complete -c gperf -s r -l random -d 'Utilizes randomness to initialize the associated values table'
complete -c gperf -s s -l size-multiple -d 'Affects the size of the generated hash table'
complete -c gperf -s h -l help -d 'Print this message'
complete -c gperf -s v -l version -d 'Print the gperf version number'
complete -c gperf -l output-file
complete -c gperf -s d -l debug -d 'Enables the debugging option (produces verbose output to the standard error)'

